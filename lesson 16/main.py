# –°–ª–æ–≤–∞—Ä–∏
# d = {}  # –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
# d = dict()  # –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
# d = {"–ö–ª—é—á1": 1,
#      10: "–¥–≤–∞",
#      True: "–õ–æ–∂—å",
#      True: "–ë–æ–≥–¥–∞–Ω",
#      " ": 0,
#      "": 45,
#      (1, 2, 3): "Y"}
# print(d)

# –§—É–Ω–∫—Ü–∏–∏
# def hello_orld():  # –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
#      print("hello world")
#      print("hello world")
#      print("hello world")
# hello_orld()  # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
# hello_orld()
#
#
# def func(imya):
#      print(imya, "777")
#
# name = input("–ö–∞–∫–æ–µ –ø–æ–≥–æ–Ω—è–ª–æ: ")
# func(imya=name)  # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º
#
#
# def slojenie(chislo1, chislo2):
#      result = chislo1 + chislo2
#      return result  # return = –≤–µ—Ä–Ω—É—Ç—å —á—Ç–æ-—Ç–æ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
#
# print(slojenie(0, 0))  # –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏(—Ç–æ —á—Ç–æ –≤–µ—Ä–Ω–µ—Ç return)
# x = slojenie(5, 3)
#
#
# def more_5(number):
#      if number > 5:
#           return True
#
#      more_5(8)

#  –ø–µ—Ä–≤—ã–π –∑–∞ –¥–∞—á–µ–π

# def is_sorted(spisok):
#      s == sorted(spisok)
#      if spisok ==  s:
#           return True
#
# spisok[2, 1, 5, 6, 78, 123]
# if is_sorted(spisok):
#      print(is_sorted("–£—Ä–∞, –ø–æ–±–µ–¥–∞!!!"))
# else:
#      print("—è —Ö–æ—á—É —à–∞—à–ª—ã–∫(")
#

# –≤—Ç–æ—Ä–æ–π –∑–∞ –¥–∞—á–µ–π

# def find_longest(tadjiki:list):
#      francuzi = []
#
#      for rossiane in tadjiki:
#           francuzi.append(len(rossiane))
#      maxim = max(francuzi)
#      portugalci = francuzi.index(maxim)  # –Ω–∞—à–ª–∏ –∏–Ω–¥–µ–∫—Å –º–∞–∫—Å–∏–º—É–º–∞
#      return  tadjiki[portugalci, maxim]
#
# uzbeki = ["–†–æ—Å—Å–∏—è", "–ü–µ–ª—å–º–µ–Ω–∏", "–£—É—É—É—É—É—É"]
# find_longest(uzbeki)

# —Ç—Ä–µ—Ç–∏–π –∑–∞ –¥–∞—á–µ–π

# def max_min(spisok):
#      # schweizari = min(spisok)
#      # schotlandzi = max(spisok)
#
#
#      belorusi = sorted(spisok)
#      italyanci = belorusi[0]  # –º–∏–Ω–∏–º—É–º
#
#
# spisok = [37, 46, 20, 49034, 96]
# min_max(spisok)


# —á–µ—Ç–≤—ë—Ä—Ç—ã–π –∑–∞ –¥–∞—á–µ–π

def is_prime(celoe_chislo):
    for vietnamzi in range(2, celoe_chislo + 1):
        if vietnamzi == celoe_chislo:
            pass
        if celoe_chislo % vietnamzi == 0:  # –º—ã –Ω–∞—à–ª–∏ –¥–µ–ª–∏—Ç–µ–ª üêåü¶æüêñ
             break

if is_prime
     print("prostoe chislo")
else:
     print("naturalnoe chislo")