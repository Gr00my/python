# ============ –∫–ª–∞—Å—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ============

# def abc(a: int = 5) -> str:
#     return a
#
# func = lambda a, b: a + b
# print(func(2, 3))

# –ö–ª–∞—Å—Å—ã. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º. –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è.

# class Human:
#     pi = 3.14  # —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Ç—Ä–µ–±—É—Ç
#     def say(self, fraza):  # –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥
#         return fraza
#
#     def __init__(self, vozrast:int = 0): # init -> initialization
#         print("—è –∏–Ω–∏—Ç")
#         self.age = vozrast  # –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∞—Ç—Ä–µ–±—É—Ç
#         self.money = 0
#
#     def __sad(self):  # __x –ø—Ä–µ–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —ç—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ __ –ø–µ—Ä–µ–¥ x
#         print("üò¢")
#
#     def work(self):
#         self.money += 10_000
#         self.__sad()  # –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–æ–≤
#
#     def __call__(self, *args, **kwargs):
#         print(f"–Ø —á–µ–ª–æ–≤–µ–∫, –º–Ω–µ {self.age} –ª–µ—Ç –∏ —è –∏–º–µ—é {self.money} —Ä—É–±")
#
#     def __add__(self, other):
#         if type(other) == int:
#             return "–ú–∞–Ω–¥–∞—Ä–∏–Ω–∫–∞" * other
#         return "–ú–∞–Ω–¥–∞—Ä–∏–Ω–∫–∞"
#
# grisha = Human()  # –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –æ–±—å–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª–∞—Å—Å–∞ ->
# print(grisha.say("–ü—Ä–∏–≤–µ—Ç"))
# print(grisha.age)
# grisha.age = 50
# anton = Human(21)
# print(anton.say("–ù–∞ —É—Ä–æ–∫!"))
# anton.work()
# print(anton.money)
# grisha()
# print(anton + 999)

# ================================


class Abc:
    def __init__(self):
        self.param = 5

    def komanda(self):
        return "–Ø - –∫–æ–º–∞–Ω–¥–∞"


class Def(Abc):  # class x(zxc) zxc - —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å
    def action(self):
        return "–Ø - —ç–∫—à–æ–Ω"


a = Abc()
print(a.param)
b = Def()
print(b.param)
print(b.action(), )

# ============ –∫—Ä–∏–Ω–¥–∂ (–ø–æ–ª–∏–º–æ—Ä—Ñ) ============

# print = input
# print("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: ")

# ================================
